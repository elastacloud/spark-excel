name: Spark Excel CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    types: [ opened, reopened ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        sparkVersion: [ 3.0.1, 3.0.2, 3.0.3, 3.1.2, 3.2.1, 3.2.4, 3.3.0, 3.3.1, 3.3.2, 3.3.3, 3.4.0, 3.4.1, 3.5.0, 3.5.1 ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout with LFS
        uses: actions/checkout@v4.1.7
        with:
          lfs: true

      - name: Set up JDK 8
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache SBT dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ matrix.sparkVersion }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.sparkVersion }}

      - name: Run tests and produce coverage
        run: sbt -DsparkVersion="${{matrix.sparkVersion}}" clean coverageOn test coverageReport

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./target/spark-${{ matrix.sparkVersion }}/scala-2.12/coverage-report/cobertura.xml
          env_vars: ${{ matrix.sparkVersion }}
          fail_ci_if_error: true
          name: spark-excel
          verbose: true

      - name: Create assembly
        if: ${{ github.event_name != 'pull_request' }}
        run: sbt -DsparkVersion="${{matrix.sparkVersion}}" clean coverageOff assembly

      - name: Upload the package
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v3.1.2
        with:
          path: ./target/spark-${{ matrix.sparkVersion }}/scala-2.12/spark-excel*.jar
          if-no-files-found: warn